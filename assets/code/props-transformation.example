import React from 'react';
import { gql, graphql } from 'react-apollo';

const FeedQuery = gql`query allPosts {
  users(orderBy: $orderBy) {
    id
    imageUrl
    description
  }
}`;

class ListPage extends Component {
  props: Props;
  componentWillReceiveProps(nextProps) {
    if (this.props.location.key !== nextProps.location.key) {
      this.props.refetchPosts();
    }
  }

  render() {
    if (this.props.postsLoading) {
      return (
        <div className="flex w-100 h-100 items-center justify-center pt7">
          <div>
            Loading
          </div>
        </div>
      );
    }

    let blurClass = '';

    if (this.props.location.pathname !== '/') {
      blurClass = ' blur';
    }

    return (
      <div className={`w-100 flex justify-center pa6${blurClass}`}>
        <div className="w-100 flex flex-wrap" style={{ maxWidth: 1150 }}>
          <Link
            to="/create"
            className="ma3 box new-post br2 flex flex-column items-center justify-center ttu fw6 f20 black-30 no-underline"
          >
            <img
              src={require('../assets/plus.svg')}
              alt=""
              className="plus mb3"
            />
            <div>New Post</div>
          </Link>
          {this.props.userPosts.map(post =>
            <Post
              key={post.id}
              post={post}
              refresh={this.props.refetchPosts}
            />,
          )}
        </div>
        {this.props.children}
      </div>
    );
  }
}

export default graphql(FeedQuery, {
  props: ({
    ownProps,
    data: { loading, allPosts, refetch },
  }) => ({
    postsLoading: loading,
    userPosts: allPosts,
    refetchPosts: refetch,
  }),
})(ListPage);
